{"version":3,"sources":["calendar.js"],"names":["Calendar","eleCalendar","yearArg","monthArg","dateArg","_Date","date","__self","this","Date","dayOfWeek","month","dayOfMonth","year","daysInThisMonth","weekIsfirstDayOfMonth","IndexOflastday","initDate","getDay","getMonth","getDate","getFullYear","subMonth","setMonth","addMonth","_now","renderCalendar","liWeekday","liMonthday","weekdaysText","fragCalendar","document","createDocumentFragment","eleWeekdays","createElement","eleMonthdays","eleHeadCalendar","className","id","innerHTML","i","length","innerText","appendChild","j","getElementById","addEventListener","event","target","fillDaysInMonth","monthdays","querySelector","dayInAMonth","dayOfNextMonth","dayOfPreMonth","indexofDayOfMonth","Number","liNum","children"],"mappings":"AAAA,IAAIA,SAAW,SAASC,YAAaC,QAASC,SAAUC,SACpD,IAAIC,MAAQ,WACR,IAAIC,KACAC,OAASC,KAETF,KADDJ,SAAWC,UAAYC,QACf,IAAIK,KAAKP,QAASC,SAAS,EAAGC,SAE9B,IAAIK,KAEfD,KAAKE,UAAY,EACjBF,KAAKG,MAAQ,EACbH,KAAKI,WAAa,EAClBJ,KAAKK,KAAO,EACZL,KAAKM,gBAAkB,EACvBN,KAAKO,sBAAwB,EAC7BP,KAAKQ,eAAiB,EACtB,IAAIC,SAAW,WACX,KAAKV,OACDG,UAAYJ,KAAKY,SACjBP,MAAQL,KAAKa,WACbP,WAAaN,KAAKc,UAClBP,KAAOP,KAAKe,cACZP,gBAAkB,IAAIL,KAAKI,KAAMF,MAAQ,EAAG,GAAGS,UAC/CL,sBAAwB,IAAIN,KAAKI,KAAMF,MAAO,GAAGO,SACjDF,eAAiBD,sBAAwBD,gBAAkB,GAGnEN,KAAKc,SAAW,WACZhB,KAAKiB,WAAWf,KAAKG,OACrBM,YAEJT,KAAKgB,SAAW,WACZlB,KAAKiB,WAAWf,KAAKG,OACrBM,YAEJA,YAEAQ,KAAO,IAAIpB,MAGf,SAASqB,iBACL,IAKIC,EACAC,EANAC,EAAe,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DC,EAAeC,SAASC,yBACxBC,EAAcF,SAASG,cAAc,MACrCC,EAAeJ,SAASG,cAAc,MACtCE,EAAkBL,SAASG,cAAc,OAI7CD,EAAYI,UAAY,WACxBF,EAAaE,UAAY,YACzBD,EAAgBC,UAAY,gBAC5BD,EAAgBE,GAAK,eACrBF,EAAgBG,UAAY,kFAE5B,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAaY,OAAQD,IAAK,EAC1Cb,EAAYI,SAASG,cAAc,OAEzBQ,UAAYb,EAAaW,GAEnCP,EAAYU,YAAYhB,GAExB,IAAK,IAAIiB,EAAI,EAAO,EAAJA,EAAOA,IACnBhB,EAAaG,SAASG,cAAc,MACpCC,EAAaQ,YAAYf,GAGjCE,EAAaa,YAAYP,GACzBN,EAAaa,YAAYV,GACzBH,EAAaa,YAAYR,GACzBlC,YAAY0C,YAAYb,GAUxBC,SAASc,eAAe,gBAAgBC,iBAAiB,QATxC,SAASC,GACE,aAApBA,EAAMC,OAAOV,GACbb,KAAKH,WACsB,aAApByB,EAAMC,OAAOV,IACpBb,KAAKD,WAETyB,oBAG0E,GAC9EA,kBAIJ,SAASA,kBACL,IAAIC,EAAYjD,YAAYkD,cAAc,cACtCC,EAAc,EACdC,EAAiB,EACjBC,EAAgB,IAAI7C,KAAKgB,KAAKZ,KAAMY,KAAKd,MAAO,GAAGS,UAEnDmC,EAAoB9B,KAAKV,sBAAwB,EAErDgB,SAASc,eAAe,QAAQH,UAAYjB,KAAKZ,KAAO,QAAU2C,OAAO/B,KAAKd,MAAQ,GACtF,IAAK,IAAI8C,EAAQ,EAAGA,EAAQP,EAAUQ,SAASjB,OAAQgB,IAC/CA,GAAShC,KAAKV,uBAAyBqC,GAAe3B,KAAKX,gBAC3DoC,EAAUQ,SAASD,GAAOf,UAAYU,IAE/BK,EAAQhC,KAAKT,gBAAkByC,EAAQP,EAAUQ,SAASjB,OACjES,EAAUQ,SAASD,GAAOf,UAAYW,IAE/BI,EAAQhC,KAAKV,uBAA8C,GAArBwC,IAC7CL,EAAUQ,SAASD,GAAOf,UAAYY,EAAgBC,EACtDA,KAIZ,OArEA7B,iBAqEO,CACHb,KAAMY,KAAKZ,KACXF,MAAOc,KAAKd,MAAM,EAClBC,WAAYa,KAAKb","file":"../calendar.min.js","sourcesContent":["var Calendar = function(eleCalendar, yearArg, monthArg, dateArg) {\r\n    var _Date = function() {\r\n        var date;\r\n        var __self = this;\r\n        if(yearArg && monthArg && dateArg){\r\n            date = new Date(yearArg, monthArg-1, dateArg);\r\n        } else{\r\n            date = new Date();\r\n        }\r\n        this.dayOfWeek = 0;\r\n        this.month = 0;\r\n        this.dayOfMonth = 0;\r\n        this.year = 0;\r\n        this.daysInThisMonth = 0;\r\n        this.weekIsfirstDayOfMonth = 0;\r\n        this.IndexOflastday = 0;\r\n        var initDate = function() {\r\n            with(__self){\r\n                dayOfWeek = date.getDay(); //获取当日星期\r\n                month = date.getMonth(); //获取当日月份\r\n                dayOfMonth = date.getDate(); //获取当月日期\r\n                year = date.getFullYear(); //获取当日年份\r\n                daysInThisMonth = new Date(year, month + 1, 0).getDate(); //获取当月总天数\r\n                weekIsfirstDayOfMonth = new Date(year, month, 1).getDay(); //这个月第一天是星期几\r\n                IndexOflastday = weekIsfirstDayOfMonth + daysInThisMonth - 1; //这个月最后一天的在日历表格中的索引\r\n            }\r\n        };\r\n        this.subMonth = function() {\r\n            date.setMonth(--this.month);\r\n            initDate();\r\n        };\r\n        this.addMonth = function() {\r\n            date.setMonth(++this.month);\r\n            initDate();\r\n        };\r\n        initDate();\r\n    };\r\n    var _now = new _Date();\r\n    renderCalendar();\r\n\r\n    function renderCalendar() { // 渲染日历UI\r\n        var weekdaysText = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'],\r\n            fragCalendar = document.createDocumentFragment(),\r\n            eleWeekdays = document.createElement('ul'),\r\n            eleMonthdays = document.createElement('ul'),\r\n            eleHeadCalendar = document.createElement('div'),\r\n            liWeekday,\r\n            liMonthday;\r\n        //设置样式\r\n        eleWeekdays.className = 'weekdays';\r\n        eleMonthdays.className = 'monthdays';\r\n        eleHeadCalendar.className = 'head-calendar';\r\n        eleHeadCalendar.id = 'headCalendar';\r\n        eleHeadCalendar.innerHTML = '<span id=\"subMonth\">&lt;</span><i id=\"date\"></i><span id=\"addMonth\">&gt;</span>';\r\n        // 渲染日历UI\r\n        for (var i = 0; i < weekdaysText.length; i++) {\r\n            liWeekday = document.createElement('li');\r\n\r\n            liWeekday.innerText = weekdaysText[i];\r\n\r\n            eleWeekdays.appendChild(liWeekday);\r\n\r\n            for (var j = 5; j > 0; j--) {\r\n                liMonthday = document.createElement('li');\r\n                eleMonthdays.appendChild(liMonthday);\r\n            }\r\n        }\r\n        fragCalendar.appendChild(eleHeadCalendar);\r\n        fragCalendar.appendChild(eleWeekdays);\r\n        fragCalendar.appendChild(eleMonthdays);\r\n        eleCalendar.appendChild(fragCalendar);\r\n        var changeDate = function(event) {\r\n            if (event.target.id === 'subMonth') {\r\n                _now.subMonth();\r\n            } else if (event.target.id === 'addMonth') {\r\n                _now.addMonth();\r\n            }\r\n            fillDaysInMonth();\r\n        };\r\n\r\n        document.getElementById('headCalendar').addEventListener('click', changeDate, false);\r\n        fillDaysInMonth();\r\n    }\r\n\r\n\r\n    function fillDaysInMonth() { //填充天数到日历\r\n        var monthdays = eleCalendar.querySelector('.monthdays');\r\n        var dayInAMonth = 1,\r\n            dayOfNextMonth = 1,\r\n            dayOfPreMonth = new Date(_now.year, _now.month, 0).getDate(), //获取上个月的天数\r\n            elMonthdays,\r\n            indexofDayOfMonth = _now.weekIsfirstDayOfMonth - 1; //\r\n        // 填充日历中的天数\r\n        document.getElementById('date').innerText = _now.year + '     ' + Number(_now.month + 1);\r\n        for (var liNum = 0; liNum < monthdays.children.length; liNum++) {\r\n            if (liNum >= _now.weekIsfirstDayOfMonth && dayInAMonth <= _now.daysInThisMonth) { //如果填充的格子在某一个月之内\r\n                monthdays.children[liNum].innerText = dayInAMonth++;\r\n\r\n            } else if (liNum > _now.IndexOflastday && liNum < monthdays.children.length) { //如果这个月的天数没有填满日历表格,填充下个月的格子\r\n                monthdays.children[liNum].innerText = dayOfNextMonth++;\r\n\r\n            } else if (liNum < _now.weekIsfirstDayOfMonth && indexofDayOfMonth >= 0) { //补充上个月的格子\r\n                monthdays.children[liNum].innerText = dayOfPreMonth - indexofDayOfMonth;\r\n                indexofDayOfMonth--;\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        year: _now.year,\r\n        month: _now.month+1,\r\n        dayOfMonth: _now.dayOfMonth\r\n    };\r\n\r\n};"]}